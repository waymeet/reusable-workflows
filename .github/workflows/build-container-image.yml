
name: Push Docker image to registry
on:
  workflow_call:
    inputs:
      DOCKER_IMAGEBASE:
        required: true
        type: string
      DOCKER_FILEPATH: 
        type: string
        required: true
      DOCKER_CONTEXT_X:
        required: true
        type: string
    secrets:
      DOCKERHUB_TOKEN:
        required: true
      GPACKAGES_TOKEN:
        required: true

jobs:
  build-and-push-image:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          #submodules: false
          #lfs: true
          clean: true

      - name: Check initial folder
        run: |
          echo "Checked out code"
          ls -la
          echo $PWD

      - name: Copy global files to sub directory
        #working-directory: /src/
        run: |
          cp .dockerignore ./src
          cp Directory.Build.props ./src
          rm -rf tmp/
          rm -rf output/
          ls -la ./src

      - name: Output debug information
        id: path_definition
        run: |
          ls -la
          echo $PWD
          echo ${GITHUB_WORKSPACE}/src
          echo "PROJECT_DIR=${GITHUB_WORKSPACE}/src" >> $GITHUB_ENV
          echo ::set-output name=PROJECT_DIR::"${GITHUB_WORKSPACE}/src"

      - name: Extract Git Branch information
        id: branch_name
        run: |
          MBRANCH=${GITHUB_REF#refs/*/}
          GITSHA=${GITHUB_SHA::8}
          BRANCH=${MBRANCH#feature/}
          echo "$BRANCH";
          if ["$BRANCH" == "develop"]; then BRANCH="$(BRANCH)$(date +%s)"; fi
          echo ::set-output name=SOURCE_NAME::$BRANCH
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
          echo ::set-output name=DOCKERIMAGEANDTAG::${{ inputs.DOCKER_IMAGEBASE }}:$BRANCH
          echo ::set-output name=K8S_CONTAINERNAME::${{ inputs.K8S_CONTAINERNAME }}
          echo SOURCE_NAME $SOURCE_NAME $BRANCH ~ALSO~ SOURCE_TAG $SOURCE_TAG ~ALSO~ SHA $GITSHA

      - uses: docker/login-action@v1
        if: ${{ !env.ACT }}
        with:
          username: hustlegotreal
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #- name: Set up Docker Buildx (already installed in runners)
      #  uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.branch_name.outputs.DOCKERIMAGEANDTAG }}
          #  --tag my-image-name:$(date +%s)
          context: ${{ inputs.DOCKER_CONTEXT_X}}
          file: ${{ inputs.DOCKER_FILEPATH }}
          secrets: |
            "GPACKAGESTOKEN=${{ secrets.GPACKAGES_TOKEN }}"
